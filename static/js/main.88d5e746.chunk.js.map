{"version":3,"sources":["api/preparedTodos/getPreparedTodos.ts","constants/constants.ts","components/Todo.tsx","components/TodoList.tsx","App.tsx","index.tsx"],"names":["getData","url","a","fetch","response","json","getTodos","getUsers","getPreparedTodos","todos","users","preparedTodos","map","todo","user","find","person","id","userId","Todo","title","completed","name","TodoList","className","item","key","App","useState","setTodos","type","onClick","then","allTodos","ReactDOM","render","document","getElementById"],"mappings":"6PAEMA,EAAO,uCAAG,WAAUC,GAAV,eAAAC,EAAA,sEACSC,MAAMF,GADf,cACRG,EADQ,yBAGPA,EAASC,QAHF,2CAAH,sDAMPC,EAAQ,uCAAG,sBAAAJ,EAAA,+EACRF,ECTgB,+CDQR,2CAAH,qDAIRO,EAAQ,uCAAG,sBAAAL,EAAA,+EACRF,ECZgB,+CDWR,2CAAH,qDAIDQ,EAAgB,uCAAG,gCAAAN,EAAA,sEACVI,IADU,cACxBG,EADwB,gBAEVF,IAFU,cAExBG,EAFwB,OAIxBC,EAAgCF,EAAMG,KAAI,SAAAC,GAAI,sBAC/CA,EAD+C,CAElDC,KAAMJ,EAAMK,MAAK,SAAAC,GAAM,OAAIA,EAAOC,KAAOJ,EAAKK,eANlB,kBASvBP,GATuB,2CAAH,qDEdhBQ,EAA+B,SAAC,GAKtC,IAJLF,EAII,EAJJA,GACAG,EAGI,EAHJA,MACAC,EAEI,EAFJA,UACAP,EACI,EADJA,KAEA,OACE,4BACE,4BAAKG,GACL,4BAAKG,GACL,4BAAKC,EAAY,KAAO,MACxB,4BACGP,GAAS,2BAAIA,EAAKQ,SCPdC,EAA4B,SAAC,GAAe,IAAbd,EAAY,EAAZA,MAC1C,OACE,2BAAOe,UAAU,+CACf,+BACE,4BACE,kCACA,oCACA,sCACA,0CAGJ,+BACGf,EAAMG,KAAI,SAAAa,GAAI,OAAI,kBAAC,EAAD,eAAMC,IAAKD,EAAKR,IAAQQ,UCSpCE,G,MAvBO,WAAO,IAAD,EAEAC,mBAAyB,IAFzB,mBAEnBnB,EAFmB,KAEZoB,EAFY,KAU1B,OACE,yBAAKL,UAAU,QACb,4BACEM,KAAK,SACLC,QAVe,WACnBvB,IAAmBwB,MAAK,SAAAC,GACtBJ,EAAS,GAAD,mBAAKpB,GAAL,YAAewB,UAMvB,QAMA,kBAAC,EAAD,CAAUxB,MAAOA,OCnBvByB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.88d5e746.chunk.js","sourcesContent":["import { TODOS_URL, USERS_URL } from '../../constants/constants';\n\nconst getData = async <T>(url: string): Promise<T> => {\n  const response = await fetch(url);\n\n  return response.json();\n};\n\nconst getTodos = async () => {\n  return getData<Todo[]>(TODOS_URL);\n};\n\nconst getUsers = async () => {\n  return getData<User[]>(USERS_URL);\n};\n\nexport const getPreparedTodos = async (): Promise<PreparedTodo[]> => {\n  const todos = await getTodos();\n  const users = await getUsers();\n\n  const preparedTodos: PreparedTodo[] = todos.map(todo => ({\n    ...todo,\n    user: users.find(person => person.id === todo.userId),\n  }));\n\n  return preparedTodos;\n};\n","export const TODOS_URL = 'https://jsonplaceholder.typicode.com/todos';\nexport const USERS_URL = 'https://jsonplaceholder.typicode.com/users';\n","import React from 'react';\n\nexport const Todo: React.FC<PreparedTodo> = ({\n  id,\n  title,\n  completed,\n  user,\n}) => {\n  return (\n    <tr>\n      <td>{id}</td>\n      <td>{title}</td>\n      <td>{completed ? 'OK' : 'KO'}</td>\n      <td>\n        {user && (<p>{user.name}</p>)}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from './Todo';\n\ninterface Props {\n  todos: PreparedTodo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <table className=\"table-sm table-dark main-table table-center\">\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Todo</th>\n          <th>Status</th>\n          <th>UserName</th>\n        </tr>\n      </thead>\n      <tbody>\n        {todos.map(item => <Todo key={item.id} {...item} />)}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useState } from 'react';\nimport { getPreparedTodos } from './api/preparedTodos/getPreparedTodos';\nimport { TodoList } from './components/TodoList';\nimport './App.css';\n\nconst App: React.FC = () => {\n\n  const [todos, setTodos] = useState<PreparedTodo[]>([]);\n\n  const LoadAllTodos = () => {\n    getPreparedTodos().then(allTodos => {\n      setTodos([...todos, ...allTodos]);\n    });\n  };\n\n  return (\n    <div className=\"main\">\n      <button\n        type=\"button\"\n        onClick={LoadAllTodos}\n      >\n        Load\n      </button>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}