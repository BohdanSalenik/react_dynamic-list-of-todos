{"version":3,"sources":["api/todos&users/todos&users.ts","constants/constants.ts","components/Todo.tsx","components/TodoList.tsx","App.tsx","index.tsx"],"names":["getData","url","a","fetch","response","json","getTodos","getUsers","Todo","title","completed","user","className","name","TodoList","todos","sortByTitle","showCompleted","sortByName","type","onClick","map","item","key","id","App","useState","setTodos","isLoading","setIsLoading","loadTodos","todosFromApi","usersFromApi","todo","find","person","userId","length","sort","todoA","todoB","localeCompare","Number","ReactDOM","render","document","getElementById"],"mappings":"6PAEMA,EAAO,uCAAG,WAAUC,GAAV,eAAAC,EAAA,sEACSC,MAAMF,GADf,cACRG,EADQ,yBAGPA,EAASC,QAHF,2CAAH,sDAMAC,EAAQ,uCAAG,sBAAAJ,EAAA,+EACfF,ECTgB,+CDQD,2CAAH,qDAIRO,EAAQ,uCAAG,sBAAAL,EAAA,+EACfF,ECZgB,+CDWD,2CAAH,qDEVRQ,EAA+B,SAAC,GAItC,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,UACAC,EACI,EADJA,KAEA,OACE,wBAAIC,UAAU,cACZ,4BAAKH,GACL,4BAAKC,EAAY,KAAO,MACxB,4BACGC,GAAS,2BAAIA,EAAKE,SCDdC,EAA4B,SAAC,GAKnC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,cACAC,EACI,EADJA,WAEA,OACE,oCACE,6BACE,4BACEN,UAAU,6BACVO,KAAK,SACLC,QAASJ,GAHX,iBAOA,4BACEJ,UAAU,6BACVO,KAAK,SACLC,QAASH,GAHX,kBAOA,4BACEL,UAAU,eACVO,KAAK,SACLC,QAASF,GAHX,iBAQF,2BAAON,UAAU,+BACf,+BACE,wBAAIA,UAAU,aACZ,oCACA,sCACA,0CAGJ,+BACGG,EAAMM,KAAI,SAAAC,GAAI,OAAI,kBAAC,EAAD,eAAMC,IAAKD,EAAKE,IAAQF,WC0BtCG,G,MAxEO,WAAO,IAAD,EACAC,mBAAyB,IADzB,mBACnBX,EADmB,KACZY,EADY,OAEQD,oBAAkB,GAF1B,mBAEnBE,EAFmB,KAERC,EAFQ,KASpBC,EAAS,uCAAG,8BAAA5B,EAAA,6DAChB2B,GAAa,GADG,SAEWvB,IAFX,cAEVyB,EAFU,gBAGWxB,IAHX,OAGVyB,EAHU,OAKhBL,EAASI,EAAaV,KAAI,SAAAY,GAAI,sBACzBA,EADyB,CAE5BtB,KAAMqB,EAAaE,MAAK,SAAAC,GAAM,OAAIA,EAAOX,KAAOS,EAAKG,gBAEvDP,GAAa,GATG,2CAAH,qDAiCf,OAAID,EACK,uBAAGhB,UAAU,WAAb,cAIP,yBAAKA,UAAU,QACb,6BACIG,EAAMsB,OAWJ,kBAAC,EAAD,CACEtB,MAAOA,EACPC,YAzCQ,WAClBW,EAAS,YAAIZ,GACVuB,MAAK,SAACC,EAAOC,GAAR,OACJD,EAAM9B,MAAMgC,cAAcD,EAAM/B,YAuC1BS,WAnCO,WACjBS,EAAS,YAAIZ,GACVuB,MAAK,SAACC,EAAOC,GAAR,OACJD,EAAM5B,KAAKE,KAAK4B,cAAcD,EAAM7B,KAAKE,WAiCnCI,cA7BU,WACpBU,EAAS,YAAIZ,GACVuB,MAAK,SAACC,EAAOC,GAAR,OACJE,OAAOF,EAAM9B,WAAagC,OAAOH,EAAM7B,kBAanC,4BACEE,UAAU,kBACVO,KAAK,SACLC,QAASU,GAHX,gBCpDZa,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.1c145b03.chunk.js","sourcesContent":["import { TODOS_URL, USERS_URL } from '../../constants/constants';\n\nconst getData = async <T>(url: string): Promise<T> => {\n  const response = await fetch(url);\n\n  return response.json();\n};\n\nexport const getTodos = async () => {\n  return getData<Todo[]>(TODOS_URL);\n};\n\nexport const getUsers = async () => {\n  return getData<User[]>(USERS_URL);\n};\n","export const TODOS_URL = 'https://jsonplaceholder.typicode.com/todos';\nexport const USERS_URL = 'https://jsonplaceholder.typicode.com/users';\n","import React from 'react';\n\nexport const Todo: React.FC<PreparedTodo> = ({\n  title,\n  completed,\n  user,\n}) => {\n  return (\n    <tr className=\"table-info\">\n      <td>{title}</td>\n      <td>{completed ? 'OK' : 'KO'}</td>\n      <td>\n        {user && (<p>{user.name}</p>)}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from './Todo';\n\ninterface Props {\n  todos: PreparedTodo[];\n  sortByTitle: () => void;\n  sortByName: () => void;\n  showCompleted: () => void;\n}\n\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  sortByTitle,\n  showCompleted,\n  sortByName,\n}) => {\n  return (\n    <>\n      <div>\n        <button\n          className=\"btn btn-info button-margin\"\n          type=\"button\"\n          onClick={sortByTitle}\n        >\n          sort by title\n        </button>\n        <button\n          className=\"btn btn-info button-margin\"\n          type=\"button\"\n          onClick={showCompleted}\n        >\n          show completed\n        </button>\n        <button\n          className=\"btn btn-info\"\n          type=\"button\"\n          onClick={sortByName}\n        >\n          by user name\n        </button>\n      </div>\n      <table className=\"table-bordered table-center\">\n        <thead>\n          <tr className=\"bg-danger\">\n            <th>Todo</th>\n            <th>Status</th>\n            <th>UserName</th>\n          </tr>\n        </thead>\n        <tbody>\n          {todos.map(item => <Todo key={item.id} {...item} />)}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { getTodos, getUsers } from './api/todos&users/todos&users';\nimport { TodoList } from './components/TodoList';\nimport './App.css';\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState<PreparedTodo[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  // useEffect(() => {\n  //   getTodos().then(setTodos);\n  //   getUsers().then(setUsers);\n  // }, []);\n\n  const loadTodos = async () => {\n    setIsLoading(true);\n    const todosFromApi = await getTodos();\n    const usersFromApi = await getUsers();\n\n    setTodos(todosFromApi.map(todo => ({\n      ...todo,\n      user: usersFromApi.find(person => person.id === todo.userId) as User,\n    })));\n    setIsLoading(false);\n  };\n\n  const sortByTitle = () => {\n    setTodos([...todos]\n      .sort((todoA, todoB) => (\n        todoA.title.localeCompare(todoB.title)\n      )));\n  };\n\n  const sortByName = () => {\n    setTodos([...todos]\n      .sort((todoA, todoB) => (\n        todoA.user.name.localeCompare(todoB.user.name)\n      )));\n  };\n\n  const showCompleted = () => {\n    setTodos([...todos]\n      .sort((todoA, todoB) => (\n        Number(todoB.completed) - Number(todoA.completed)\n      )));\n  };\n\n  if (isLoading) {\n    return <p className=\"loading\">Loading...</p>;\n  }\n\n  return (\n    <div className=\"main\">\n      <div>\n        {!todos.length\n          ? (\n            <button\n              className=\"btn btn-primary\"\n              type=\"button\"\n              onClick={loadTodos}\n            >\n              Load All\n            </button>\n          )\n          : (\n            <TodoList\n              todos={todos}\n              sortByTitle={sortByTitle}\n              sortByName={sortByName}\n              showCompleted={showCompleted}\n            />\n          )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}